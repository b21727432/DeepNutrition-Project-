import matplotlib.pyplot as plt
import numpy as np
leaky = {'loss': [1.7286304535216392, 1.082443899735935, 0.8807556759724188, 0.7812589796283943, 0.6978456551968516, 0.6474144415943015, 0.6109270389988501, 0.54875257421893, 0.5155070994538126, 0.4863526851820651, 0.45202216776704546, 0.4012724364769566, 0.3981305104442051, 0.36046304995577627, 0.34683940471259533, 0.30523940430388935, 0.3145637538807212, 0.28304318282071056, 0.2679552780701471, 0.2496948368429935], 'acc': [0.49345136, 0.698763, 0.76861507, 0.7952947, 0.82464224, 0.8383459, 0.8512006, 0.866602, 0.8744846, 0.8847926, 0.89522195, 0.908683, 0.91232115, 0.9206888, 0.9256609, 0.9353626, 0.93342227, 0.94106233, 0.94943005, 0.95306814], 'val_loss': [0.680336651822018, 0.42888913492318326, 0.3745645697633946, 0.337043803635296, 0.31762774779937153, 0.30942020509961393, 0.2977622521734828, 0.2904074893182542, 0.2675347287408476, 0.2772941444681895, 0.2734522727877986, 0.27106490135843575, 0.2587957685539469, 0.2608257402954664, 0.2696259403940198, 0.2678255395098892, 0.26627593947333195, 0.2566196478827378, 0.2650640433792464, 0.26383914606539965], 'val_acc': [0.8558952, 0.9090248, 0.91921395, 0.9290393, 0.9348617, 0.93595344, 0.9399563, 0.9399563, 0.94650656, 0.94250363, 0.94505095, 0.94505095, 0.94650656, 0.9505095, 0.94796216, 0.94505095, 0.94978166, 0.94468707, 0.94541484, 0.94868994]}

prelu = {'loss': [1.855840397181947, 1.067867930523836, 0.8327658998245928, 0.7358871905932696, 0.6334563276484823, 0.5788509133978105, 0.5213980844619059, 0.4798843679324541, 0.4649936288587968, 0.4245774473807847, 0.3912651085052291, 0.36597138152947506, 0.3429180071050755, 0.32381773980691925, 0.31030082977445805, 0.30197132315718994, 0.28207714551572977, 0.2761013817654105, 0.2495680343422083, 0.24486166481050697], 'acc': [0.46032515, 0.7085659, 0.7791798, 0.806843, 0.84045136, 0.85719484, 0.8735744, 0.8875273, 0.8875273, 0.9045135, 0.9119146, 0.91858774, 0.9270808, 0.93387526, 0.93945646, 0.9380005, 0.9446736, 0.9450376, 0.953288, 0.95304537], 'val_loss': [0.9033702478116873, 0.5228868892780199, 0.4157394058242136, 0.3677178188376454, 0.3322572305407538, 0.31237499092219523, 0.29679253910269054, 0.28687588140672565, 0.28210903969172485, 0.2729430300327501, 0.2698800105482079, 0.26936709311717455, 0.2666121814019826, 0.258341632544473, 0.2554431808325014, 0.2580529176589351, 0.2650933023053425, 0.2571652332652067, 0.25223974121120857, 0.25956502241834606], 'val_acc': [0.8148688, 0.8841108, 0.912172, 0.9220117, 0.9311224, 0.93877554, 0.93877554, 0.94278425, 0.94533527, 0.9489796, 0.9478863, 0.9460641, 0.9489796, 0.946793, 0.9537172, 0.9500729, 0.9446064, 0.94934404, 0.94861513, 0.94497085]}

crelu = {'loss': [1.9038850111610426, 1.1029388226291814, 0.833654430824951, 0.7059387926890892, 0.6292112677355602, 0.5642573665234832, 0.5229155505082838, 0.4835467291219969, 0.4551085158621538, 0.4331807035220778, 0.4066875725948379, 0.39030986280154045, 0.3701062436702618, 0.35080133892101717, 0.333666525102513, 0.32078704531111124, 0.3069850408194104, 0.2918094685421078, 0.27591096237935225, 0.26797428200885975], 'acc': [0.45044935, 0.72322077, 0.7869808, 0.819043, 0.84564, 0.8676221, 0.8785523, 0.8848676, 0.8972553, 0.9005344, 0.911829, 0.9196017, 0.9230022, 0.9294389, 0.93599707, 0.937333, 0.94376975, 0.94717026, 0.95166385, 0.9559145], 'val_loss': [1.1145054492336965, 0.6710685007056297, 0.5094231984942977, 0.44129904146082916, 0.4028511711379938, 0.3717497646460059, 0.34987360178030025, 0.337697421423873, 0.32551987896188656, 0.31497784150622743, 0.3049230286252429, 0.3020479763634721, 0.29202619578406125, 0.29035304495465686, 0.2836791542277001, 0.2810186704086979, 0.27609575143334464, 0.27688635049159066, 0.2723885507960069, 0.2699523806920526], 'val_acc': [0.7770468, 0.85745615, 0.8947368, 0.90533626, 0.9144737, 0.91922516, 0.9243421, 0.9312866, 0.93421054, 0.93201756, 0.939693, 0.9375, 0.939693, 0.94042397, 0.9378655, 0.9440789, 0.94298244, 0.94298244, 0.94590646, 0.9437134]}



def plot_vaccuracy(history,title):
    cellte = []
    plt.title(title)
    plt.plot(leaky['acc'])
    cellte.append([max(leaky['acc'])])
    plt.plot(leaky['val_acc'])
    cellte.append([max(leaky['val_acc'])])
    plt.plot(prelu['acc'])
    cellte.append([max(prelu['acc'])])
    plt.plot(prelu['val_acc'])
    cellte.append([max(prelu['val_acc'])])
    plt.plot(crelu['acc'])
    cellte.append([max(crelu['acc'])])
    plt.plot(crelu['val_acc'])
    cellte.append([max(crelu['val_acc'])])
  
    plt.ylabel('accuracy')
    plt.xlabel('epoch')
    names = [ 'batch_4_val_acc','batch_4_acc', 'batch_8_val_acc','batch_8_acc','batch_16_val_acc','batch_16_acc']
    plt.legend(names, loc='best')
    names = [x for _,x in sorted(zip(cellte,names))]
    names.reverse()
    cellte.sort()
    cellte.reverse()
    colors = plt.cm.BuPu(np.flip(np.linspace(0, 0.8, len(names))))
    the_table = plt.table(cellText=cellte,
                      rowLabels=names,
                      rowColours=colors,
                      colLabels=['best accuracy'],
                      colWidths=[1.0/4],
                       bbox=[1.2, 0, 0.2, 1],
                      loc='right')
    plt.subplots_adjust(right=0.74)
  
    plt.savefig('bb.jpg')
    plt.show()
def plot_loss(history,title):
    plt.title(title)
    plt.plot(history.history['loss'])
    plt.plot(history.history['val_loss'])
    plt.ylabel('loss')
    plt.xlabel('epoch')
    plt.legend(['train_loss', 'validation_loss'], loc='best')
    plt.show()

# print(None.history)
plot_vaccuracy(None,'FOOD101-Inceptionv3_Batches')
# plot_loss(None,'FOOD101-Inceptionv3 0.5dropout flatten Loss')